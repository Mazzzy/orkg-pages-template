{"version":3,"sources":["assets/logo_white.svg","assets/logo.svg","Logo.js","network/networkRequests.js","components/filter-bytext/FilterByText.js","components/links-list/LinksList.js","components/ExampleA.js","components/doi-card/DoiCard.js","components/ExampleB.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Image","styled","div","logo_white","logo","Logo","style","display","position","src","alt","height","Component","plainGetRequest","url","headers","submitGetRequest","Error","myHeaders","Headers","Promise","resolve","reject","fetch","method","then","response","ok","json","catch","error","status","statusText","statusCode","getComparisonById","id","a","resourceURL","resourceMetaData","statementsURL","statementsData","hasURL","hashResult","hashIdRequest","data","comparisonDataURL","comparisonData","getPaperById","FilterByText","props","this","labelText","filterStr","handleFilterChange","Form","FormGroup","Label","for","Input","type","name","placeholder","value","onChange","className","LinksList","dataValues","rowId","map","linkItem","index","label","key","href","target","ExampleA","getData","dataFrame","setState","requestedData","loading","e","trim","toLowerCase","renderData","state","authorStatements","content","filter","item","predicate","contributions","length","object","renderComparisonTable","Table","striped","bordered","responsive","whiteSpace","overflow","textOverflow","padding","properties","property","active","Object","keys","maxWidth","contributionLabel","paperId","createRows","propId","getFilteredVals","val","indexOf","color","icon","faSpinner","spin","DoiCard","doi","ExampleB","doiStatement","doiValue","App","githubRepoURL","backgroundColor","size","Container","fluid","noGutters","marginLeft","marginRight","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.4d0cdd73.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white.56875860.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.7d352eef.svg\";","import React, { Component } from 'react';\nimport logo_white from 'assets/logo_white.svg';\nimport logo from 'assets/logo.svg';\nimport styled from 'styled-components';\nconst Image = styled.div`\n    height: 45px;\n    width: 120px;\n    background-image: url('${logo_white}');\n    background-size: contain;\n    background-repeat: no-repeat;\n    -webkit-transition: background-image 0.2s ease-in-out;\n    transition: background-image 0.2s ease-in-out;\n    &:hover {\n        background-image: url('${logo}');\n    }\n`;\n\nexport default class Logo extends Component {\n    render() {\n        return (\n            <div style={{ display: 'inline-block', position: 'relative' }}>\n                <Image src={logo_white} alt=\"ORKG Logo\" style={{ height: 45 }} />\n            </div>\n        );\n    }\n}\n","export const plainGetRequest = (url, headers) => {\n    return submitGetRequest(url, headers);\n};\n\nexport const submitGetRequest = (url, headers, send_token = false) => {\n    if (!url) {\n        throw new Error('Cannot submit GET request. URL is null or undefined.');\n    }\n    const myHeaders = headers ? new Headers(headers) : {};\n\n    return new Promise((resolve, reject) => {\n        fetch(url, {\n            method: 'GET',\n            headers: myHeaders\n        })\n            .then(response => {\n                if (!response.ok) {\n                    reject({\n                        error: new Error(`Error response. (${response.status}) ${response.statusText}`),\n                        statusCode: response.status,\n                        statusText: response.statusText\n                    });\n                } else {\n                    const json = response.json();\n                    if (json.then) {\n                        json.then(resolve).catch(reject);\n                    } else {\n                        return resolve(json);\n                    }\n                }\n            })\n            .catch(reject);\n    });\n};\n\nexport const getComparisonById = async id => {\n    const resourceURL = `https://www.orkg.org/orkg/api/resources/${id}/`;\n    const resourceMetaData = await plainGetRequest(resourceURL);\n\n    const statementsURL = `https://www.orkg.org/orkg/api/statements/subject/${id}/`;\n    const statementsData = await plainGetRequest(statementsURL);\n\n    // get the comparison data\n    const hasURL = `https://www.orkg.org/orkg/simcomp/visualization/?resourceId=${id}`;\n    const hashResult = await plainGetRequest(hasURL);\n    const hashIdRequest = hashResult.data.url;\n\n    const comparisonDataURL = `https://www.orkg.org/orkg/simcomp/compare/${hashIdRequest}`;\n    const comparisonData = await plainGetRequest(comparisonDataURL);\n\n    return {\n        resourceMetaData,\n        statementsData,\n        comparisonData\n    };\n};\n\nexport const getPaperById = async id => {\n    const resourceURL = `https://www.orkg.org/orkg/api/resources/${id}/`;\n    const resourceMetaData = await plainGetRequest(resourceURL);\n\n    const statementsURL = `https://www.orkg.org/orkg/api/statements/subject/${id}/`;\n    const statementsData = await plainGetRequest(statementsURL);\n    return {\n        resourceMetaData,\n        statementsData\n    };\n};\n","import React, { Component } from 'react';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport './FilterByText.css';\nclass FilterByText extends Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        const { labelText, filterStr, handleFilterChange } = this.props;\n        return (\n            <Form>\n                <FormGroup>\n                    <Label for=\"filterInput\">{labelText}</Label>\n                    <Input \n                        type=\"text\" \n                        name=\"filterInput\" \n                        id=\"filterInput\" \n                        placeholder=\"Filter by text\" \n                        value={ filterStr }\n                        onChange={ handleFilterChange }\n                        className=\"filterInput\"\n                    />\n                </FormGroup>\n            </Form>\n        )\n    }\n}\nexport default FilterByText;","import React, { Component } from 'react';\nimport './LinksList.css';\n\nclass LinksList extends Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        const { dataValues, rowId } = this.props;\n        return (\n            <ul className={'linksList'}>\n                {\n                    dataValues.map( (linkItem, index) => {\n                        const { label } = linkItem;\n                        return (\n                            <li key={'link_id' + rowId + '_' + index}>\n                                <a href={label} target='_blank'>{label}</a>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        )\n    }\n}\nexport default LinksList;","import React, { Component } from 'react';\nimport './visWidgetConfig.css';\nimport { Table } from 'reactstrap';\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { getComparisonById } from 'network/networkRequests';\nimport FilterByText from './filter-bytext/FilterByText';\nimport LinksList from './links-list/LinksList';\nclass ExampleA extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            requestedData: null,\n            filterStr: ''\n        };\n    }\n\n    componentDidMount() {\n        // fetch data\n        this.getData();\n    }\n\n    getData = () => {\n        getComparisonById('R44930').then(dataFrame => {\n            this.setState({ requestedData: dataFrame, loading: false });\n        });\n    };\n\n    handleFilterChange = e => {\n        const filterStr = e.target.value.trim().toLowerCase()\n        this.setState({\n          filterStr: filterStr,\n        })\n    }\n\n    renderData = () => {\n        const { requestedData, filterStr } = this.state;\n        // create an authors array;\n        const authorStatements = requestedData.statementsData.content.filter(item => item.predicate.id === 'P27');\n\n        if (!requestedData) {\n            return <div>Some error</div>;\n        } else {\n            return (\n                <div>\n                    <div>\n                        Title: <b>{requestedData.resourceMetaData.label}</b>; Number of contributions:{' '}\n                        <b>{requestedData.comparisonData.contributions.length}</b>\n                    </div>\n                    <div>\n                        Authors:{' '}\n                        {authorStatements.map(item => {\n                            return item.object.label + '; ';\n                        })}\n                    </div>\n                    <div className=\"my-3\">\n                        <FilterByText \n                            labelText=\"Filter by text for columns apart from Contribution and Same as\"\n                            filterStr={ filterStr }\n                            handleFilterChange={ this.handleFilterChange }\n                        />\n                    </div>\n                    <div>Comparison Data:</div>\n                    {this.renderComparisonTable()}\n                </div>\n            );\n        }\n    };\n\n    renderComparisonTable = () => {\n        const { requestedData } = this.state;\n        const dataFrame = requestedData.comparisonData;\n        return (\n            <Table striped bordered responsive>\n                {/*  define headers*/}\n                <thead>\n                    <tr>\n                        <th\n                            style={{\n                                whiteSpace: 'nowrap',\n                                overflow: 'hidden',\n                                textOverflow: 'ellipsis',\n                                padding: '3px'\n                            }}\n                        >\n                            Contribution\n                        </th>\n                        {dataFrame.properties\n                            .filter(property => property.active === true)\n                            .map(property => {\n                                return (\n                                    <th\n                                        key={property.label}\n                                        style={{\n                                            whiteSpace: 'nowrap',\n                                            overflow: 'hidden',\n                                            textOverflow: 'ellipsis',\n                                            padding: '3px'\n                                        }}\n                                    >\n                                        {property.label}\n                                    </th>\n                                );\n                            })}\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(dataFrame.data).map((data, id) => {\n                        return (\n                            <tr key={'tr_id' + id} >\n                                <td\n                                    key={'td_id_' + id}\n                                    style={{\n                                        whiteSpace: 'nowrap',\n                                        overflow: 'hidden',\n                                        textOverflow: 'ellipsis',\n                                        padding: '3px',\n                                        maxWidth: '200px'\n                                    }}\n                                >\n                                    {dataFrame.contributions[id].contributionLabel +\n                                        '(' +\n                                        dataFrame.contributions[id].id +\n                                        '/' +\n                                        dataFrame.contributions[id].paperId +\n                                        ')'}\n                                </td>\n                                {this.createRows(id)}\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            {/* </table> */}\n            </Table>\n        );\n    };\n\n    createRows = rowId => {\n        const { requestedData, filterStr } = this.state;\n        // property filtering\n        const dataFrame = requestedData.comparisonData;\n        const activeProperties = dataFrame.properties.filter(property => property.active === true);\n        return activeProperties.map(property => {\n            const propId = property.id;\n            const dataValues = dataFrame.data[propId][rowId];\n            return (\n                <td\n                    key={'td_id' + rowId + '_' + propId}\n                    style={{\n                        whiteSpace: 'nowrap',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis',\n                        padding: '3px',\n                        maxWidth: '200px'\n                    }}\n                >\n                    {\n                        (propId === 'SAME_AS') ? <LinksList dataValues dataValues={dataValues} rowId={rowId} /> :\n                        (filterStr.length > 0) ? this.getFilteredVals(dataValues, filterStr) :\n                        dataValues.map(val => {\n                            return val.label + ' ';\n                        })\n                    }\n                </td>\n            );\n        });\n    };\n\n    getFilteredVals (dataValues, filterStr) {\n        return dataValues.map(val => {\n            const filered = val.label ? val.label.toLowerCase().indexOf(filterStr) != -1 : false;\n            return filered ? val.label + ' ' : ' ';\n        });\n    }\n\n    /** Component Rendering Function **/\n    render() {\n        const { loading } = this.state;\n        return (\n            <div>\n                <div className={'headerStyle'}>\n                    Example A: Comparisons{' '}\n                    <a style={{ color: '#e86161' }} href=\"https://www.orkg.org/orkg/comparison/R44930\">\n                        COVID-19 Reproductive Number Estimates\n                    </a>\n                </div>\n                <div className={'bodyStyle'}>\n                    {loading && (\n                        <h2 className=\"h5\">\n                            <span>\n                                <Icon icon={faSpinner} spin />\n                            </span>{' '}\n                            Loading ...\n                        </h2>\n                    )}\n                    {!loading && this.renderData()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ExampleA;\n","import React, { Component } from 'react';\nimport './DoiCard.css';\n\nclass DoiCard extends Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        const { doi } = this.props;\n        return (\n            <div className=\"doiContainer\">\n                <span>Paper doi: </span>\n                {doi && <a href={`https://doi.org/${doi}`} target=\"_blank\">{doi}</a>}\n            </div>\n        )\n    }\n}\nexport default DoiCard;","import React, { Component } from 'react';\nimport DoiCard from './doi-card/DoiCard';\nimport './visWidgetConfig.css';\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { getPaperById } from '../network/networkRequests';\n\nclass ExampleB extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        // fetch data\n        this.getData();\n    }\n\n    getData = () => {\n        getPaperById('R8186').then(dataFrame => {\n            this.setState({ requestedData: dataFrame, loading: false });\n        });\n    };\n\n    renderData = () => {\n        // create an authors array;\n        const authorStatements = this.state.requestedData.statementsData.content.filter(item => item.predicate.id === 'P27');\n        const doiStatement = this.state.requestedData.statementsData.content.filter(item => item.predicate.id === 'P26');\n        let doiValue = '';\n        if (doiStatement[0] && doiStatement[0].object) {\n            doiValue = doiStatement[0].object.label;\n        }\n        if (!this.state.requestedData) {\n            return <div>Some error</div>;\n        } else {\n            return (\n                <div className=\"pb-5\">\n                    <div>\n                        Title: <b>{this.state.requestedData.resourceMetaData.label}</b>;\n                    </div>\n                    <div>\n                        Authors:{' '}\n                        {authorStatements.map(item => {\n                            return item.object.label + '; ';\n                        })}\n                    </div>\n                    <div>Paper Data:</div>\n                    <DoiCard doi={doiValue}/>\n                </div>\n            );\n        }\n    };\n\n    /** Component Rendering Function **/\n    render() {\n        return (\n            <div>\n                <div className={'headerStyle'}>\n                    Example B: Paper{' '}\n                    <a style={{ color: '#e86161' }} href=\"https://www.orkg.org/orkg/paper/R8186\">\n                        Open Research Knowledge Graph: Next Generation Infrastructure for Semantic Scholarly Knowledge\n                    </a>\n                </div>\n                <div className={'bodyStyle'}>\n                    {this.state.loading && (\n                        <h2 className=\"h5\">\n                            <span>\n                                <Icon icon={faSpinner} spin />\n                            </span>{' '}\n                            Loading ...\n                        </h2>\n                    )}\n                    {!this.state.loading && this.renderData()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ExampleB;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Tippy from '@tippyjs/react';\nimport 'tippy.js/dist/tippy.css';\nimport { FaGithub, FaGitlab } from 'react-icons/fa';\nimport Logo from './Logo';\nimport { Container } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ExampleA from 'components/ExampleA';\nimport ExampleB from 'components/ExampleB';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.githubRepoURL = 'https://github.com/Mazzzy/orkg-pages-template';\n    }\n\n    render() {\n        return (\n            <>\n                <header>\n                    <div className=\"navbar shadow-sm\" style={{ backgroundColor: '#5f6474' }}>\n                        <div className=\"d-flex justify-content-between\">\n                            <a href=\"https://www.orkg.org/orkg/\">\n                                <Logo />\n                            </a>\n                        </div>\n\n                        <div>\n                            <Tippy content=\"Link to original template project\">\n                                <span className=\"mr-2\">\n                                    <a href=\"https://gitlab.com/TIBHannover/orkg/github-pages-template\">\n                                        <FaGitlab size={35} color=\"#e24329\" />\n                                    </a>\n                                </span>\n                            </Tippy>\n                            <Tippy content=\"Link to GitHub project\">\n                                <span className=\"mr-2\">\n                                    <a href={this.githubRepoURL}>\n                                        <FaGithub size={35} color=\"#000\" />\n                                    </a>\n                                </span>\n                            </Tippy>\n                        </div>\n                    </div>\n                </header>\n                <Container fluid noGutters>\n                    <Container\n                        style={{\n                            backgroundColor: '#9c9c9c',\n                            marginLeft: '10%',\n                            marginRight: '10%',\n                            maxWidth: '80%',\n                            height: 'calc(100vh - 40px)',\n                            overflow: 'auto'\n                        }}\n                    >\n                        <ExampleA />\n                        <ExampleB />\n                    </Container>\n                </Container>\n            </>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}